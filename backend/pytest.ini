[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    -v
    --strict-markers
    --tb=short
    --color=yes
    --durations=10
    --cov=app
    --cov-report=html:tests/coverage_html
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --junitxml=tests/junit.xml

# Markers for test categories
markers =
    unit: Unit tests
    integration: Integration tests
    performance: Performance tests
    security: Security tests
    slow: Slow running tests
    auth: Authentication tests
    database: Database tests
    api: API tests
    ai: AI service tests
    smoke: Smoke tests for basic functionality

# Test timeouts
timeout = 300
timeout_method = thread

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */migrations/*
    */alembic/*
    */__pycache__/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Tool configuration
[tool:pytest]
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*:pytest.PytestCollectionWarning

# Performance test configuration
[pytest:performance]
max_response_time = 2.0
min_throughput = 50
concurrent_users = 10
test_duration = 30

# Security test configuration  
[pytest:security]
enable_security_headers_check = true
enable_rate_limit_check = true
enable_auth_validation = true
enable_input_validation = true